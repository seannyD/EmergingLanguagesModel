quantile_f = function(X,q){
# Use empirical distribution curve
#quantile(X,q,na.rm=T, type=1)
# Nth element, rounding down (Hammarstrom)
sort(X)[(q*length(X))]
}
x = rnorm(1000)
t1 = sapply(seq(0,1,by=0.01), function(X){quantile_f(x,X)})
t1 = sapply(seq(0,1,by=0.01), function(X){quantile(x,X,type=1)})
t1 = sapply(seq(0,1,by=0.01), function(X){quantile_f(x,X)})
t2 = sapply(seq(0,1,by=0.01), function(X){quantile(x,X,type=1)})
t1==t2
sum(t1==t2)
sum(t1==t2,na.rm=T)
quantile_f(x,0.95)
quantile(x,0.95,type=1)
quantile_f(x,0.95) == quantile(x,0.95,type=1)
t1 = sapply(seq(0,1,by=0.01), function(X){quantile_f(x,X)})
t2 = sapply(seq(0,1,by=0.01), function(X){quantile(x,X,type=1)})
sum(t1==t2,na.rm=T)
t1==t2
quantile_f(x,0.94) == quantile(x,0.95,type=1)
quantile_f(x,0.94) == quantile(x,0.93,type=1)
quantile_f(x,0.94) == quantile(x,0.94,type=1)
t1[95]
t2[95]
t2[96]
t2[93]
t2[94]
t2[95]
sum(t1>t2)
sum(t1>t2,na.rm=T)
sum(t1<t2,na.rm=T)
library(plyr)
library(ggplot2)
library(lattice)
setwd("~/Documents/MPI/EmergingLanguages/SignSpeechConnieBill/Model/")
# 500 stages = 70 years
timescale = 70/500
makePDF = function(pdfName,widthx){
pdf(paste("analysis/graphs/",pdfName,sep=''),width=widthx,height=4)
}
fixLabels = function(dx,labs){
current_labs = unique(dx$runName)
for(i in 1:length(current_labs)){
dx[dx$runName==current_labs[i],]$runName = labs[i]
}
dx$runName = factor(dx$runName,levels = labs)
#dx$runName = relevel(dx$runName,labs[i])
return(dx)
}
plotMeanRun = function(dx, labels, plotIndividualRuns=F,pdfName=NA,plotYears = T,widthx=4){
if(!is.na(pdfName)){
makePDF(pdfName,widthx)
}
dx = fixLabels(dx,labels)
if(plotYears){
px = ggplot(data=dx, aes(x=year, y=prop.deaf, group=runName))
} else{
px = ggplot(data=dx, aes(x=stage, y=prop.deaf, group=runName))
}
px = px + geom_smooth(aes(colour=runName), lwd=2)  +
xlab("Years") +
ylab("D") +
theme(legend.position="top", axis.title.y=element_text(angle=0),legend.title=element_blank())
if(plotIndividualRuns){
px = px + 	geom_line(aes(group=runNameNum, colour=runName), alpha=0.2)
}
print(px)
if(!is.na(pdfName)){
dev.off()
}
return(px)
}
plotMeanHearingSigns = function(dx,labels, plotIndividualRuns=F,pdfName=NA,plotYears = T,widthx=4){
if(!is.na(pdfName)){
makePDF(pdfName,widthx)
}
dx = fixLabels(dx,labels)
if(plotYears){
px = ggplot(data=dx, aes(x=year, y=prop.signs,group=runName))
} else{
px = ggplot(data=dx, aes(x=stage, y=prop.signs,group=runName))
}
px = px +geom_smooth(aes(colour=runName), lwd=2) +
xlab("Years") +
ylab("S")+
theme(legend.position="top", axis.title.y=element_text(angle=0), legend.title=element_blank())
if(plotIndividualRuns){
px = px + geom_line(aes(group=runNameNum, colour=runName), alpha=0.2)
}
print(px)
if(!is.na(pdfName)){
dev.off()
}
return(px)
}
loadData = function(paramName){
res = loadDataHist(paramName)
# 	param = params[params$RunName==paramName,]
# 	popSize = param$nAgents
# 	#popSize = 76
#
# 	folder = paste("results/", paramName,'/',sep='')
# 	res = data.frame()
# 	files = list.files(folder,"*.res")
#
# 	for(i in 1:length(files)){
# 		d = read.csv(paste(folder,files[i],sep=''),header=T,quote='')
# 		names(d) = c("stage","id","deaf","signs","sounds",'structure','age')
# 		d$prop.signs = d$signs/(d$signs+d$sounds)
# 	d$prop.signs[is.nan(d$prop.signs)] = 0
# 		d$runNum = i
# 		res = rbind(res,d)
# 	}
ressum = ddply(res, .(runNum,stage), summarize, prop.signs = mean(prop.signs), nDeaf = sum(deaf))
ressum$runName = paramName
ressum$runNameNum = paste(ressum$runName,ressum$runNum)
ressum$prop.deaf = ressum$nDeaf / popSize
ressum$year = ressum$stage * timescale
return(ressum)
}
loadDataHist = function(paramName){
param = params[params$RunName==paramName,]
popSize = param$nAgents
#popSize = 76
folder = paste("results/", paramName,'/',sep='')
res = data.frame()
files = list.files(folder,"*.res")
for(i in 1:length(files)){
d = read.csv(paste(folder,files[i],sep=''),header=T,quote='')
names(d) = c("stage","id","deaf","signs","sounds",'structure','age')
d$prop.signs = d$signs/(d$signs+d$sounds)
d$prop.signs[is.nan(d$prop.signs)] = 0
d$runNum = i
res = rbind(res,d)
}
res$prop.signs = res$signs/(res$signs+res$sounds)
return(res)
}
plotFluency = function(dxx,cuts = c(0.45,0.30,0.1) ,stagex = 100){
colx = c("#FF7F00", "#00B0FF")
dx = dxx[dxx$stage==stagex,]
nonfluent = 681/(2189-372)
fluent = 449 / (2189-372)
balanced = 78 / (2189-372)
non = 562 / (2189-372)
nonfluent.chican = 211/(720-156)
fluent.chican = 100 / (720-156)
balanced.chican = 21 / (720-156)
non.chican = 215 / (2189-372)
# balanced
balanced.m = sum(dx[dx$deaf==0,]$prop.signs > cuts[1],na.rm=T)/nrow(dx)
# fluent
fluent.m = sum(dx[dx$deaf==0,]$prop.signs > cuts[2] & (dx[dx$deaf==0,]$prop.signs <= cuts[1]),na.rm=T) / nrow(dx)
# non-fluent
nonfluent.m = sum(dx[dx$deaf==0,]$prop.signs > cuts[3] & (dx[dx$deaf==0,]$prop.signs <= cuts[2]),na.rm=T)/nrow(dx)
# non-signers
non.m = sum(dx[dx$deaf==0,]$prop.signs <= cuts[3],na.rm=T)/nrow(dx)
barplot(rbind(
c(non,nonfluent,fluent,balanced)
# ,c(non.chican, nonfluent.chican,fluent.chican,balanced.chican)
,c(non.m,nonfluent.m,fluent.m,balanced.m)
),beside=T, ylab='Proportion of population',  names.arg = c("Non\nSigner","Non\nFluent",'Fluent','Balanced'), col =colx,border=NA, space=c(0,0.5))
legend(6,0.6,legend=c("Kata Kolok","Model"),col=colx,pch=15,cex=1)
}
##########
params = read.csv("Parameters/KK_Model_parameters.csv",stringsAsFactors=F)
for(i in 1:ncol(params)){
params[is.na(params[,i]),i] = params[1,i]
}
params = rbind(params,params[1,])
params[nrow(params),c("RunName","nAgents")] = c("KK_100Community",100)
params = rbind(params,params[1,])
params[nrow(params),c("RunName","nAgents")] = c("KK_500Community",500)
params = rbind(params,params[1,])
params[nrow(params),c("RunName","nAgents")] = c("KK_800Community",800)
params$nAgents = as.numeric(params$nAgents)
kkDefault = loadData("KK_Default")
loadData = function(paramName){
res = loadDataHist(paramName)
param = params[params$RunName==paramName,]
popSize = param$nAgents
# 	#popSize = 76
#
# 	folder = paste("results/", paramName,'/',sep='')
# 	res = data.frame()
# 	files = list.files(folder,"*.res")
#
# 	for(i in 1:length(files)){
# 		d = read.csv(paste(folder,files[i],sep=''),header=T,quote='')
# 		names(d) = c("stage","id","deaf","signs","sounds",'structure','age')
# 		d$prop.signs = d$signs/(d$signs+d$sounds)
# 	d$prop.signs[is.nan(d$prop.signs)] = 0
# 		d$runNum = i
# 		res = rbind(res,d)
# 	}
ressum = ddply(res, .(runNum,stage), summarize, prop.signs = mean(prop.signs), nDeaf = sum(deaf))
ressum$runName = paramName
ressum$runNameNum = paste(ressum$runName,ressum$runNum)
ressum$prop.deaf = ressum$nDeaf / popSize
ressum$year = ressum$stage * timescale
return(ressum)
}
loadDataHist = function(paramName){
param = params[params$RunName==paramName,]
popSize = param$nAgents
#popSize = 76
folder = paste("results/", paramName,'/',sep='')
res = data.frame()
files = list.files(folder,"*.res")
for(i in 1:length(files)){
d = read.csv(paste(folder,files[i],sep=''),header=T,quote='')
names(d) = c("stage","id","deaf","signs","sounds",'structure','age')
d$prop.signs = d$signs/(d$signs+d$sounds)
d$prop.signs[is.nan(d$prop.signs)] = 0
d$runNum = i
res = rbind(res,d)
}
res$prop.signs = res$signs/(res$signs+res$sounds)
return(res)
}
kkDefault = loadData("KK_Default")
test7 = rbind(
loadData("KK_CommHigh"),
kkDefault,
loadData("KK_CommLow")
)
plotMeanRun(test7, c("High","KK","Low"), pdfName = 'MR_Comm.pdf')
plotMeanHearingSigns(test7, c("High","KK","Low"), pdfName = 'HS_Comm.pdf')
head(test7)
tail(test7)
paramName
paramName = "KK_CommLow"
res = loadDataHist(paramName)
param = params[params$RunName==paramName,]
popSize = param$nAgents
head(res)
ressum = ddply(res, .(runNum,stage), summarize, prop.signs = mean(prop.signs), nDeaf = sum(deaf))
head(ressum)
tail(ressum)
tail(res)
max(res$signs)
hist(res$signs)
hist(res$prop.signs)
ressum = ddply(res, .(runNum,stage), summarize, prop.signs = mean(prop.signs,na.rm=T), nDeaf = sum(deaf))
ressum$runName = paramName
ressum$runNameNum = paste(ressum$runName,ressum$runNum)
ressum$prop.deaf = ressum$nDeaf / popSize
ressum$year = ressum$stage * timescale
head(ressum)
plotMeanRun = function(dx, labels, plotIndividualRuns=F,pdfName=NA,plotYears = T,widthx=4){
if(!is.na(pdfName)){
makePDF(pdfName,widthx)
}
dx = fixLabels(dx,labels)
if(plotYears){
px = ggplot(data=dx, aes(x=year, y=prop.deaf, group=runName))
} else{
px = ggplot(data=dx, aes(x=stage, y=prop.deaf, group=runName))
}
px = px + geom_smooth(aes(colour=runName), lwd=2)  +
xlab("Years") +
ylab("D") +
theme(legend.position="top", axis.title.y=element_text(angle=0),legend.title=element_blank())
if(plotIndividualRuns){
px = px + 	geom_line(aes(group=runNameNum, colour=runName), alpha=0.2)
}
print(px)
if(!is.na(pdfName)){
dev.off()
}
return(px)
}
plotMeanHearingSigns = function(dx,labels, plotIndividualRuns=F,pdfName=NA,plotYears = T,widthx=4){
if(!is.na(pdfName)){
makePDF(pdfName,widthx)
}
dx = fixLabels(dx,labels)
if(plotYears){
px = ggplot(data=dx, aes(x=year, y=prop.signs,group=runName))
} else{
px = ggplot(data=dx, aes(x=stage, y=prop.signs,group=runName))
}
px = px +geom_smooth(aes(colour=runName), lwd=2) +
xlab("Years") +
ylab("S")+
theme(legend.position="top", axis.title.y=element_text(angle=0), legend.title=element_blank())
if(plotIndividualRuns){
px = px + geom_line(aes(group=runNameNum, colour=runName), alpha=0.2)
}
print(px)
if(!is.na(pdfName)){
dev.off()
}
return(px)
}
loadData = function(paramName){
res = loadDataHist(paramName)
param = params[params$RunName==paramName,]
popSize = param$nAgents
# 	#popSize = 76
#
# 	folder = paste("results/", paramName,'/',sep='')
# 	res = data.frame()
# 	files = list.files(folder,"*.res")
#
# 	for(i in 1:length(files)){
# 		d = read.csv(paste(folder,files[i],sep=''),header=T,quote='')
# 		names(d) = c("stage","id","deaf","signs","sounds",'structure','age')
# 		d$prop.signs = d$signs/(d$signs+d$sounds)
# 	d$prop.signs[is.nan(d$prop.signs)] = 0
# 		d$runNum = i
# 		res = rbind(res,d)
# 	}
ressum = ddply(res, .(runNum,stage), summarize, prop.signs = mean(prop.signs,na.rm=T), nDeaf = sum(deaf))
ressum$runName = paramName
ressum$runNameNum = paste(ressum$runName,ressum$runNum)
ressum$prop.deaf = ressum$nDeaf / popSize
ressum$year = ressum$stage * timescale
return(ressum)
}
kkDefault = loadData("KK_Default")
test3 = rbind(
loadData("KK_SmallCommunity"),
kkDefault,
loadData("KK_LargeCommunity")
)
plotMeanRun(test7, c("High","KK","Low"), pdfName = 'MR_Comm.pdf')
plotMeanHearingSigns(test7, c("High","KK","Low"), pdfName = 'HS_Comm.pdf')
head(test7)
loadData = function(paramName){
res = loadDataHist(paramName)
param = params[params$RunName==paramName,]
popSize = param$nAgents
# 	#popSize = 76
#
# 	folder = paste("results/", paramName,'/',sep='')
# 	res = data.frame()
# 	files = list.files(folder,"*.res")
#
# 	for(i in 1:length(files)){
# 		d = read.csv(paste(folder,files[i],sep=''),header=T,quote='')
# 		names(d) = c("stage","id","deaf","signs","sounds",'structure','age')
# 		d$prop.signs = d$signs/(d$signs+d$sounds)
# 	d$prop.signs[is.nan(d$prop.signs)] = 0
# 		d$runNum = i
# 		res = rbind(res,d)
# 	}
ressum = ddply(res, .(runNum,stage), summarize, prop.signs = mean(prop.signs,na.rm=T), nDeaf = sum(deaf))
ressum$runName = paramName
ressum$runNameNum = paste(ressum$runName,ressum$runNum)
ressum$prop.deaf = ressum$nDeaf / popSize
ressum$year = ressum$stage * timescale
return(ressum)
}
loadDataHist = function(paramName){
param = params[params$RunName==paramName,]
popSize = param$nAgents
#popSize = 76
folder = paste("results/", paramName,'/',sep='')
res = data.frame()
files = list.files(folder,"*.res")
for(i in 1:length(files)){
d = read.csv(paste(folder,files[i],sep=''),header=T,quote='')
names(d) = c("stage","id","deaf","signs","sounds",'structure','age')
d$prop.signs = d$signs/(d$signs+d$sounds)
d$prop.signs[is.nan(d$prop.signs)] = 0
d$runNum = i
res = rbind(res,d)
}
res$prop.signs = res$signs/(res$signs+res$sounds)
return(res)
}
head(kkDefault)
test7 = rbind(
loadData("KK_CommHigh"),
kkDefault,
loadData("KK_CommLow")
)
plotMeanRun(test7, c("High","KK","Low"), pdfName = 'MR_Comm.pdf')
plotMeanHearingSigns(test7, c("High","KK","Low"), pdfName = 'HS_Comm.pdf')
